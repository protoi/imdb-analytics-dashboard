{"version":3,"sources":["TimeGraph.js","HourlyBubbleGraph.js","GraphContainer.js","BarGraph.js","navbar.js","Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["TimeGraph","_ref","data_to_plot","x_axis_param","y_axis_param","title_text","handleClickPassedFromParent","area_chart","LineChart","CartesianGrid","XAxis","YAxis","Tooltip","Line","react_default","a","createElement","AreaChart","data","onClick","e","console","log","activeTooltipIndex","strokeDasharray","dataKey","padding","top","Area","type","stroke","fill","activeDot","r","Fragment","style","width","height","ResponsiveContainer","parseDomain","b","c","Math","max","apply","map","entry","queries","renderBubbleTooltip","props","active","payload","length","backgroundColor","border","margin","minute","domain","range","ScatterGenerator","text_label","clickHandler","ScatterChart","right","bottom","left","interval","tickLine","transform","name","tick","axisLine","label","value","position","ZAxis","cursor","wrapperStyle","zIndex","content","Scatter","parseInt","HourlyBubbleGraph","_useState","useState","_useState2","Object","slicedToArray","minuteToDisplay","setMinuteToDisplay","_useState3","_useState4","dataToDisplay","setDataToDisplay","getMinuteToDisplay","_ref2","slice","first_part","second_part","third_part","Container","outline","display","Paper","elevation","List","sx","bgcolor","overflow","maxHeight","& ul","element","index","Accordion","key","color","AccordionSummary","expandIcon","ExpandMore_default","aria-controls","id","Typography","intents","AccordionDetails","exact_time","entities","join","actual_message","response_message","Divider","jump_mapping","weekly","daily","hourly","group_data_by_hour","hourly_data","minutes","i","push","forEach","time_data","substring","GraphContainer","useEffect","axios","get","then","res","dir","depth","catch","err","message","weeklyGraphClickedIndex","setWeeklyGraphClickedIndex","_useState5","_useState6","dailyGraphClickedIndex","setDailyGraphClickedIndex","_useState7","_useState8","stateOfGraph","setStateOfGraph","maxWidth","Box","Button","variant","previousStateOfGraph","ButtonGroup","aria-label","justifyContent","alignItems","concat","color_maker","hexval","offset","toString","BarMaker","someEvent","graphData","x_axis_key","y_axis_key","BarChart","Bar","Cell","PieMaker","PieChart","Pie","isAnimationActive","cx","cy","outerRadius","CustomRenderer","tag","size","animation","animationDelay","random","fontSize","react_tooltip_esm_min","anchorId","place","count","CloudMaker","lib","minSize","maxSize","tags","colorOptions","luminosity","hue","renderer","onMouseOver","MyBarGraph","intentComponentToRender","setIntentComponentToRender","activeLabel","genre","genre_distribution","actor","top_5_actor_distribution","movie","top_5_movie_distribution","release_year","year_distribution","drawerWidth","navItems","itemName","link","DrawerAppBar","window","_React$useState","React","_React$useState2","mobileOpen","setMobileOpen","handleDrawerToggle","prevState","drawer","react","textAlign","my","item","ListItem","disablePadding","ListItemButton","ListItemText","primary","container","undefined","document","body","CssBaseline","AppBar","component","Toolbar","IconButton","edge","mr","sm","Menu_default","flexGrow","xs","Link","href","Drawer","open","onClose","ModalProps","keepMounted","& .MuiDrawer-paper","boxSizing","p","Homepage","posts","setPosts","src","alt","barData","require","router","createBrowserRouter","path","BarGraph","App","className","navbar","react_router_dist","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.96933265.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  ResponsiveContainer,\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nexport default function TimeGraph({\r\n  data_to_plot,\r\n  x_axis_param,\r\n  y_axis_param,\r\n  title_text,\r\n  handleClickPassedFromParent,\r\n}) {\r\n  let line_chart = (\r\n    <LineChart data={data_to_plot}>\r\n      <CartesianGrid strokeDasharray=\"5 5\" />\r\n      <XAxis\r\n        dataKey={x_axis_param}\r\n        padding={{ left: 30, right: 30 }}\r\n        interval={0}\r\n        angle={0}\r\n        dx={20}\r\n        textAnchor={\"end\"}\r\n      />\r\n      <YAxis padding={{ top: 30 }} interval=\"preserveEnd\" />\r\n      <Tooltip />\r\n      {/* <Legend /> */}\r\n      <Line\r\n        type=\"monotone\"\r\n        dataKey={y_axis_param}\r\n        stroke=\"#8884d8\"\r\n        activeDot={{ r: 10 }}\r\n      />\r\n    </LineChart>\r\n  );\r\n  let area_chart = (\r\n    <AreaChart\r\n      data={data_to_plot}\r\n      onClick={(e) => {\r\n        if (e == null) return;\r\n        console.log(e);\r\n        handleClickPassedFromParent(e.activeTooltipIndex);\r\n      }}\r\n    >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis\r\n        dataKey={x_axis_param}\r\n        // padding={{ left: 5, right: 5 }}\r\n        // interval={0}\r\n        // angle={0}\r\n        // dx={20}\r\n      />\r\n      <YAxis padding={{ top: 5 }} />\r\n      <Tooltip />\r\n      <Area\r\n        type=\"monotone\"\r\n        dataKey={y_axis_param}\r\n        stroke=\"#8884d8\"\r\n        fill=\"#8884d8\"\r\n        activeDot={{ r: 10 }}\r\n      />\r\n    </AreaChart>\r\n  );\r\n  return (\r\n    <>\r\n      <h3>{title_text}</h3>\r\n      <div style={{ width: \"100%\", height: 400 }}>\r\n        <ResponsiveContainer>{area_chart}</ResponsiveContainer>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  ZAxis,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\nimport { Container } from \"@mui/material\";\r\nimport { Paper } from \"@mui/material\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport InboxIcon from \"@mui/icons-material/Inbox\";\r\n\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\n\r\n//finds out the max number of queries in a minute inside all the three arrays\r\nconst parseDomain = (a, b, c) => [\r\n  0,\r\n  Math.max(\r\n    Math.max.apply(\r\n      null,\r\n      a.map((entry) => entry.queries)\r\n    ),\r\n    Math.max.apply(\r\n      null,\r\n      b.map((entry) => entry.queries)\r\n    ),\r\n    Math.max.apply(\r\n      null,\r\n      c.map((entry) => entry.queries)\r\n    )\r\n  ),\r\n];\r\n\r\nconst renderBubbleTooltip = (props) => {\r\n  const { active, payload } = props;\r\n\r\n  if (active && payload && payload.length) {\r\n    const data = payload[0] && payload[0].payload;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          border: \"1px solid #999\",\r\n          margin: 0,\r\n          padding: 10,\r\n        }}\r\n      >\r\n        <p>minute #{data.minute}</p>\r\n        <p>\r\n          <span>No of Queries: </span>\r\n          {data.queries}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nlet domain = null;\r\nlet range = [32, 512];\r\n\r\nconst ScatterGenerator = (data, text_label, clickHandler) => {\r\n  return (\r\n    <ResponsiveContainer width=\"90%\" height=\"30%\">\r\n      <ScatterChart\r\n        // width={600}\r\n        // height={120}\r\n        margin={{\r\n          top: 70,\r\n          right: 0,\r\n          bottom: 0,\r\n          left: 0,\r\n        }}\r\n      >\r\n        <XAxis\r\n          type=\"category\"\r\n          dataKey=\"minute\"\r\n          interval={0}\r\n          tickLine={{ transform: \"translate(0, -6)\" }}\r\n        />\r\n        <YAxis\r\n          type=\"number\"\r\n          dataKey=\"index\"\r\n          name={text_label}\r\n          height={100}\r\n          width={100}\r\n          tick={false}\r\n          tickLine={false}\r\n          axisLine={false}\r\n          label={{ value: text_label, position: \"insideRight\" }}\r\n        />\r\n        <ZAxis type=\"number\" dataKey=\"queries\" domain={domain} range={range} />\r\n        <Tooltip\r\n          cursor={{ strokeDasharray: \"3 3\" }}\r\n          wrapperStyle={{ zIndex: 100 }}\r\n          content={renderBubbleTooltip}\r\n        />\r\n        <Scatter\r\n          data={data}\r\n          fill=\"#8884d8\"\r\n          onClick={(e) => {\r\n            // console.dir(e, { depth: null });\r\n            if (e == null || e.minute == null) return;\r\n            console.log(parseInt(e.minute));\r\n            clickHandler(parseInt(e.minute));\r\n            // handleClickPassedFromParent(e.minute);\r\n          }}\r\n        />\r\n      </ScatterChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default function HourlyBubbleGraph({\r\n  data_to_plot,\r\n  x_axis_param,\r\n  y_axis_param,\r\n  title_text,\r\n}) {\r\n  //Hooks\r\n\r\n  let [minuteToDisplay, setMinuteToDisplay] = useState(-1);\r\n  let [dataToDisplay, setDataToDisplay] = useState([]);\r\n\r\n  //effects\r\n  // useEffect(() => {\r\n  //   console.log(minuteToDisplay);\r\n  //   if (minuteToDisplay >= 0)\r\n  //     setDataToDisplay(data_to_plot[minuteToDisplay][\"data\"]);\r\n  //   else setDataToDisplay([]);\r\n  // });\r\n\r\n  //handlers\r\n  function getMinuteToDisplay(minute) {\r\n    if (minute == null) return;\r\n    if (minute == minuteToDisplay) {\r\n      setMinuteToDisplay(-1);\r\n      return;\r\n    }\r\n    setMinuteToDisplay(minute);\r\n\r\n    if (minute >= 0) setDataToDisplay(data_to_plot[minute][\"data\"]);\r\n    else setDataToDisplay([]);\r\n  }\r\n\r\n  let [first_part, second_part, third_part] = [\r\n    data_to_plot.slice(0, 20),\r\n    data_to_plot.slice(20, 40),\r\n    data_to_plot.slice(40, 60),\r\n  ];\r\n  // console.log(first_part);\r\n\r\n  domain = parseDomain(first_part, second_part, third_part);\r\n\r\n  //   let bubble_chart_1 = ScatterGenerator(first_part, \"00:00-07:59\");\r\n  //   let bubble_chart_2 = ScatterGenerator(second_part, \"08:00-15:99\");\r\n  //   let bubble_chart_3 = ScatterGenerator(third_part, \"16:00-23:99\");\r\n\r\n  const mylist = [\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n    8,\r\n    9,\r\n    10,\r\n    11,\r\n    12,\r\n    13,\r\n    14,\r\n    15,\r\n    16,\r\n    17,\r\n    18,\r\n    19,\r\n    20,\r\n  ];\r\n  return (\r\n    <>\r\n      <h3>{title_text}</h3>\r\n      <Container\r\n        style={{\r\n          outline: \"1px blue solid\",\r\n          display: \"flex\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <div style={{ width: \"70%\", height: 400 }}>\r\n          {ScatterGenerator(first_part, \"00:00-19:59\", getMinuteToDisplay)}\r\n          {ScatterGenerator(second_part, \"20:00-39:59\", getMinuteToDisplay)}\r\n          {ScatterGenerator(third_part, \"40:00-59:59\", getMinuteToDisplay)}\r\n        </div>\r\n\r\n        {/* The scrollable list  */}\r\n        {minuteToDisplay != -1 && (\r\n          <Paper\r\n            elevation={3}\r\n            style={{\r\n              width: \"30%\",\r\n              backgroundColor: \"#42a5f5\",\r\n              // maxHeight: \"100%\",\r\n              // overflow: \"auto\",\r\n              // outline: \"1px green solid\",\r\n            }}\r\n          >\r\n            <List\r\n              sx={{\r\n                width: \"100%\",\r\n                bgcolor: \"#42a5f5\",\r\n                position: \"relative\",\r\n                overflow: \"auto\",\r\n                maxHeight: 400,\r\n                \"& ul\": { padding: 0 },\r\n              }}\r\n              // subheader={<li />}\r\n            >\r\n              {dataToDisplay.map((element, index) => {\r\n                return (\r\n                  <>\r\n                    <Accordion\r\n                      key={index}\r\n                      sx={{ backgroundColor: \"#1976d2\", color: \"white\" }}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id={index}\r\n                      >\r\n                        <Typography>\r\n                          Accordion #{element.intents[0]} --- {index}\r\n                        </Typography>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails>\r\n                        <div>\r\n                          <p>{element.exact_time}</p>\r\n                          <p>{element.intents[0]}</p>\r\n                          <p>{element.entities.join(\", \")}</p>\r\n                          <p>{element.actual_message}</p>\r\n                          <p>{element.response_message}</p>\r\n                        </div>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                    <Divider />\r\n                  </>\r\n                );\r\n              })}\r\n            </List>\r\n          </Paper>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n/*\r\n<ListItem disablePadding>\r\n                    <ListItemButton>\r\n                      <ListItemIcon>\r\n                        <InboxIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={element} />\r\n                    </ListItemButton>\r\n                  </ListItem> */\r\n","import { Container } from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Button } from \"@mui/material\";\r\nimport { ButtonGroup } from \"@mui/material\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport TimeGraph from \"./TimeGraph\";\r\nimport HourlyBubbleGraph from \"./HourlyBubbleGraph\";\r\n\r\nconst jump_mapping = { weekly: null, daily: \"weekly\", hourly: \"daily\" };\r\n\r\nfunction extract_minute_from_date(time_data) {\r\n  return parseInt(time_data.substring(3, 5));\r\n}\r\n\r\nfunction group_data_by_hour(hourly_data) {\r\n  let minutes = [];\r\n  for (let i = 0; i < 60; ++i)\r\n    minutes.push({ minute: i, queries: 0, data: [], index: 1 });\r\n\r\n  hourly_data.forEach((element) => {\r\n    let minute = extract_minute_from_date(element[\"exact_time\"]);\r\n    minutes[minute].queries += 1;\r\n    minutes[minute].data.push(element);\r\n  });\r\n\r\n  return minutes;\r\n}\r\n\r\nexport default function GraphContainer({ data }) {\r\n  // let dis = true;\r\n\r\n  const [posts, setPosts] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://movie-bot-backend-26orzciwg-ghutoon.vercel.app/query/group_queries_by_date_week?date=2023/02/09\"\r\n      )\r\n      .then((res) => {\r\n        console.dir(res, { depth: null });\r\n        return res;\r\n      })\r\n      // .then((data) => {\r\n      //   console.log(data);\r\n      //   setPosts(data);\r\n      // })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }, []);\r\n\r\n  let [weeklyGraphClickedIndex, setWeeklyGraphClickedIndex] = useState(null);\r\n  let [dailyGraphClickedIndex, setDailyGraphClickedIndex] = useState(null);\r\n  // let [hourlyGraphClickedIndex, setHourlyGraphClickedIndex] = useState(null);\r\n\r\n  let [stateOfGraph, setStateOfGraph] = useState(\"weekly\");\r\n\r\n  function handleWeeklyGraphClickedIndex(index) {\r\n    console.log(`clicked index on the weekly graph was: ${index}`);\r\n    setWeeklyGraphClickedIndex(index);\r\n    setStateOfGraph(\"daily\");\r\n  }\r\n  function handleDailyGraphClickedIndex(index) {\r\n    console.log(`clicked index on the daily graph was: ${index}`);\r\n    setDailyGraphClickedIndex(index);\r\n    setStateOfGraph(\"hourly\");\r\n  }\r\n\r\n  function handleBackButtonClick() {\r\n    let previousStateOfGraph = jump_mapping[stateOfGraph];\r\n    if (previousStateOfGraph == null) return;\r\n    setStateOfGraph(previousStateOfGraph);\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      maxWidth=\"xl\"\r\n      style={{\r\n        \r\n        outline: \"1px red solid\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          //   width: 4 / 5, // 80%\r\n          height: 4 / 5, // 80%\r\n          backgroundColor: \"primary.light\",\r\n        }}\r\n      >\r\n        {/* add 3 buttons, one for back and 2 for left and right navigation */}\r\n        <Button variant=\"contained\" onClick={handleBackButtonClick}>\r\n          Back\r\n        </Button>\r\n        <ButtonGroup\r\n          variant=\"contained\"\r\n          //   disabled\r\n          aria-label=\"outlined primary button group\"\r\n        >\r\n          <Button>{\"<<<\"}</Button>\r\n          <Button>{\">>>\"}</Button>\r\n        </ButtonGroup>\r\n      </Box>\r\n\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        {/* <div\r\n          style={{\r\n            width: 100,\r\n            height: 200,\r\n            backgroundColor: \"red\",\r\n            outline: \"5px pink solid\",\r\n          }}\r\n        ></div> */}\r\n        <Box\r\n          sx={{\r\n            width: 4 / 5, // 80%\r\n            height: 4 / 5, // 80%\r\n\r\n            backgroundColor: \"#f5f5f5\",\r\n            outline: \"1px pink solid\",\r\n          }}\r\n        >\r\n          {stateOfGraph === \"weekly\" && (\r\n            <TimeGraph\r\n              data_to_plot={data}\r\n              x_axis_param={\"day\"}\r\n              y_axis_param={\"queries\"}\r\n              title_text={\"Weekly Queries\"}\r\n              handleClickPassedFromParent={handleWeeklyGraphClickedIndex}\r\n            />\r\n          )}\r\n          {stateOfGraph === \"daily\" && (\r\n            <TimeGraph\r\n              data_to_plot={data[weeklyGraphClickedIndex][\"daily_queries\"]}\r\n              x_axis_param={\"hour\"}\r\n              y_axis_param={\"queries\"}\r\n              title_text={\"Daily Queries\"}\r\n              handleClickPassedFromParent={handleDailyGraphClickedIndex}\r\n            />\r\n          )}\r\n          {stateOfGraph === \"hourly\" && (\r\n            <HourlyBubbleGraph\r\n              data_to_plot={group_data_by_hour(\r\n                data[weeklyGraphClickedIndex][\"daily_queries\"][\r\n                  dailyGraphClickedIndex\r\n                ][\"data\"]\r\n              )}\r\n              x_axis_param={\"minute\"}\r\n              y_axis_param={\"queries\"}\r\n              title_text={\"Hourly Queries\"}\r\n              // handleClickPassedFromParent={handleHourlyGraphClickedIndex}\r\n            />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n  /* return (\r\n    <>\r\n      <Container maxWidth=\"lg\" style={{ backgroundColor: \"salmon\" }}>\r\n        <p>Hello world</p>\r\n        <p>Test 123</p>\r\n      </Container>\r\n    </>\r\n  ); */\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { TagCloud } from \"react-tagcloud\";\r\n// import { render } from \"react-dom\";\r\n/* import WordCloud from \"react-d3-cloud\";\r\n\r\nimport { scaleOrdinal } from \"d3-scale\";\r\nimport { schemeCategory10 } from \"d3-scale-chromatic\"; */\r\n\r\nimport { Tooltip as ReactTooltip } from \"react-tooltip\";\r\n\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Cell,\r\n  // Legend,\r\n} from \"recharts\";\r\n\r\n// const schemeCategory10ScaleOrdinal = scaleOrdinal(schemeCategory10);\r\n\r\n/* const sampleData = [\r\n  { x: \"A\", y: 150 },\r\n  { x: \"B\", y: 200 },\r\n  { x: \"C\", y: 400 },\r\n]; */\r\n\r\n// const colors = [\"#FC7333\", \"#BFDD38\", \"#1F8A70\", \"#334299\", \"#16AA55\"];\r\n\r\nfunction color_maker(hexval, offset) {\r\n  return `#${((hexval + offset * 8 + offset * 4) % 16777216).toString(16)}`;\r\n  // let hexString = \"0123456789ABCDEF\";\r\n  // return (\r\n  // String(hexString.substring((offset >> 4) & 0x0f, 1)) +\r\n  // hexString.substring(offset & 0x0f, 1)\r\n  // );\r\n}\r\n\r\nconst MyBarGraph = ({ data }) => {\r\n  let [graphData, setGraphData] = useState(data); //array\r\n  let [intentComponentToRender, setIntentComponentToRender] = useState(null);\r\n  //barorpie\r\n  function someEvent(e) {\r\n    console.log(e);\r\n    console.dir(e.activeTooltipIndex);\r\n    /* setGraphData(\r\n      graphData.map((x) => {\r\n        return {\r\n          name: x.name,\r\n          queries: x.queries * (e.activeTooltipIndex + 1),\r\n        };\r\n      })\r\n    ); */\r\n    if (intentComponentToRender === null)\r\n      setIntentComponentToRender(e.activeLabel);\r\n    else\r\n      setIntentComponentToRender(\r\n        intentComponentToRender === e.activeLabel ? null : e.activeLabel\r\n      );\r\n  }\r\n\r\n  // if (barOrPie === \"bar\") {\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"flex\" }}>\r\n        {BarMaker(\r\n          someEvent,\r\n          graphData,\r\n          \"Frequency vs Intent mapping\",\r\n          \"name\",\r\n          \"total_count\"\r\n        )}\r\n        {/*     {intentComponentToRender === \"genre\" &&\r\n          PieMaker(\r\n            someEvent,\r\n            graphData[0].genre_distribution,\r\n            \"Genre Distributions\"\r\n          )} */}\r\n\r\n        {\r\n          {\r\n            genre: PieMaker(\r\n              null,\r\n              graphData[0].genre_distribution,\r\n              \"Genre Distributions\"\r\n            ),\r\n            actor: CloudMaker(\r\n              graphData[1].top_5_actor_distribution,\r\n              \"Top 5 Actors\"\r\n            ),\r\n            /* actor: BarMaker(\r\n              null,\r\n              graphData[1].top_5_actor_distribution,\r\n              \"Top 5 Actors\",\r\n              \"name\",\r\n              \"searches\"\r\n            ), */\r\n            movie: BarMaker(\r\n              null,\r\n              graphData[2].top_5_movie_distribution,\r\n              \"Top 5 Movies\",\r\n              \"name\",\r\n              \"searches\"\r\n            ),\r\n            release_year: BarMaker(\r\n              null,\r\n              graphData[4].year_distribution,\r\n              \"Frequency vs Year of Release\",\r\n              \"year\",\r\n              \"searches\"\r\n            ),\r\n          }[intentComponentToRender]\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n  /* } else {\r\n    return <div>{PieMaker(someEvent, graphData[0].genre_distribution)}</div>;\r\n  } */\r\n};\r\n\r\nfunction BarMaker(someEvent, graphData, title_text, x_axis_key, y_axis_key) {\r\n  return (\r\n    <div>\r\n      <h1>{title_text}</h1>\r\n      <BarChart\r\n        width={500}\r\n        height={500}\r\n        data={graphData}\r\n        margin={{\r\n          top: 0,\r\n          right: 0,\r\n          left: 0,\r\n          bottom: 100,\r\n        }}\r\n        onClick={(e) => {\r\n          if (e == null || someEvent == null) return;\r\n          someEvent(e);\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey={x_axis_key} />\r\n        <YAxis />\r\n        <Tooltip />\r\n\r\n        <Bar dataKey={y_axis_key} fill=\"salmon\">\r\n          {graphData.map((entry, index) => {\r\n            return (\r\n              <Cell\r\n                key={`cell-${index}`}\r\n                // fill={colors[index % colors.length]}\r\n                fill={color_maker(0xffaaff, (index + 1) * 4)}\r\n              />\r\n            );\r\n          })}\r\n        </Bar>\r\n      </BarChart>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PieMaker(someEvent, graphData, title_text) {\r\n  /*  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\r\n  const [isHovering, setIsHovering] = useState(false);\r\n  const [tooltipData, setTooltipData] = useState({\r\n    genre: null,\r\n    searches: null,\r\n  });\r\n\r\n  const handleMouseOver = (event) => {\r\n    if (event == null) {\r\n      setIsHovering(false);\r\n      return;\r\n    }\r\n    setIsHovering(true);\r\n    setTooltipData({ genre: event[\"name\"], searches: event[\"searches\"] });\r\n  };\r\n\r\n  const handleMouseOut = () => {\r\n    setIsHovering(false);\r\n    console.log(`HOVERED OUT`);\r\n    setTooltipData({ genre: null, searches: null });\r\n  };\r\n\r\n  const handleMouseMove = (event) => {\r\n    // console.log(event);\r\n    if (event == null) {\r\n      return;\r\n    }\r\n    const { chartX, chartY } = event;\r\n    console.log(`${chartX} ----- ${chartY}`);\r\n    setMousePosition({ x: chartX, y: chartY });\r\n  };\r\n */\r\n  return (\r\n    <div>\r\n      <h1>{title_text}</h1>\r\n\r\n      <PieChart\r\n        width={500}\r\n        height={500}\r\n        /*         onMouseMove={(e) => handleMouseMove(e)}\r\n        onMouseOut={handleMouseOut} */\r\n      >\r\n        <Pie\r\n          dataKey=\"searches\"\r\n          isAnimationActive={false}\r\n          data={graphData}\r\n          cx={250}\r\n          cy={250}\r\n          outerRadius={200}\r\n          fill=\"salmon\"\r\n          label\r\n          // onMouseOver={handleMouseOver}\r\n        >\r\n          {graphData.map((entry, index) => {\r\n            return (\r\n              <Cell\r\n                key={`cell-${index}`}\r\n                fill={color_maker(0x888888, (index + 1) * 4)}\r\n              />\r\n            );\r\n          })}\r\n        </Pie>\r\n        <Tooltip />\r\n      </PieChart>\r\n      {/* {isHovering === true && (\r\n        <div>\r\n          {TooltipGen(tooltipData.genre, tooltipData.searches)}\r\n        </div>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TooltipGen(name, count) {\r\n  return (\r\n    <div>\r\n      <h3>Name: {name}</h3>\r\n      <h3>Count: {count}</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CustomRenderer(tag, size, color) {\r\n  return (\r\n    <>\r\n      <span\r\n        id={`${tag.name}-${size}`}\r\n        key={tag.name}\r\n        style={{\r\n          animation: \"blinker 10s linear infinite\",\r\n          animationDelay: `${Math.random() * 2}s`,\r\n          fontSize: `${size}px`,\r\n          // border: `2px solid ${color}`,\r\n          // outline: `1px solid ${color}`,\r\n          margin: \"1px\",\r\n          padding: \"1px\",\r\n          display: \"inline-block\",\r\n          color: `${color}`,\r\n        }}\r\n      >\r\n        {tag.name}\r\n      </span>\r\n      <ReactTooltip\r\n        anchorId={`${tag.name}-${size}`}\r\n        place=\"bottom\"\r\n        content={TooltipGen(tag.name, tag.count)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction CloudMaker(graphData, title_text) {\r\n  return (\r\n    <div>\r\n      <h1>{title_text}</h1>\r\n      <TagCloud\r\n        style={{\r\n          width: 500,\r\n          height: 500,\r\n          outline: \"1px dashed red\",\r\n          overflow: \"hidden\",\r\n        }}\r\n        minSize={1}\r\n        maxSize={25}\r\n        tags={graphData}\r\n        colorOptions={{\r\n          luminosity: \"dark\",\r\n          hue: \"#ff0000\",\r\n        }}\r\n        renderer={CustomRenderer}\r\n        onMouseOver={(e) => {\r\n          console.log(e);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyBarGraph;\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link } from \"@mui/material\";\r\n\r\nconst drawerWidth = 240;\r\nconst navItems = [\r\n  { itemName: \"home\", link: \"/\" },\r\n  { itemName: \"time mapping\", link: \"/time\" },\r\n  { itemName: \"intent mapping\", link: \"/intent\" },\r\n  //   { itemName: \"Contact\", link: \"/time\" },\r\n];\r\n\r\nfunction DrawerAppBar(props) {\r\n  const { window } = props;\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const drawer = (\r\n    <Box onClick={handleDrawerToggle} sx={{ textAlign: \"center\" }}>\r\n      <Typography variant=\"h6\" sx={{ my: 2 }}>\r\n        movie query\r\n      </Typography>\r\n      <Divider />\r\n      <List>\r\n        {navItems.map((item) => (\r\n          <ListItem key={item.itemName} disablePadding>\r\n            <ListItemButton sx={{ textAlign: \"center\" }}>\r\n              <ListItemText primary={item.itemName} />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <CssBaseline />\r\n      <AppBar component=\"nav\">\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{ mr: 2, display: { sm: \"none\" } }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"h6\"\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            {\"movie bot :0\"}\r\n          </Typography>\r\n          <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\r\n            {navItems.map((item) => (\r\n              <Button key={item.itemName} sx={{ color: \"#fff\" }}>\r\n                {/* {item} */}\r\n                <Link href={item.link} color=\"inherit\">\r\n                  {item.itemName}\r\n                </Link>\r\n                {/* {item.link} */}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Box component=\"nav\">\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n          sx={{\r\n            display: { xs: \"block\", sm: \"none\" },\r\n            \"& .MuiDrawer-paper\": {\r\n              boxSizing: \"border-box\",\r\n              width: drawerWidth,\r\n            },\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </Box>\r\n      <Box component=\"main\" sx={{ p: 3 }}>\r\n        <Toolbar />\r\n        {/* <Typography>Lorem ipsum</Typography> */}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nDrawerAppBar.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default DrawerAppBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Homepage() {\r\n  const [posts, setPosts] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://movie-bot-backend-26orzciwg-ghutoon.vercel.app/onboarding/get_onboarding_qrcode\"\r\n      )\r\n      .then((res) => {\r\n        // console.log(res);\r\n        return res.data;\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        setPosts(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <img src={posts} alt=\"new\" />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  createBrowserRouter,\r\n  RouterProvider,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nimport ReactDOM from \"react-dom/client\";\r\n\r\nimport \"./App.css\";\r\nimport GraphContainer from \"./GraphContainer\";\r\nimport MyBarGraph from \"./BarGraph\";\r\nimport Demo from \"./navbar\";\r\nimport Homepage from \"./Homepage\";\r\n// import TimeGraph from \"./TimeGraph\";\r\nconst barData = require(\"./data.json\");\r\n\r\nconst data = require(\"./DATA/output.json\");\r\n\r\nconst router = createBrowserRouter([\r\n  {\r\n    path: \"/\",\r\n    element: (\r\n      <Homepage></Homepage>\r\n      // <div>\r\n      //   <h1>🐒🐒🐒🐒🐒🐒🐒🐒🐒🐒🐒🐒🐒🐒🐒🐒🐒🐒🐒🐒🐒🐒🐒🐒🐒🐒</h1>\r\n      //   {/* <Link to=\"about\">About Us</Link> */}\r\n      // </div>\r\n    ),\r\n  },\r\n  {\r\n    path: \"time\",\r\n    element: (\r\n      <div>\r\n        <GraphContainer data={data}></GraphContainer>\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    path: \"intent\",\r\n    element: (\r\n      <div>\r\n        <MyBarGraph data={barData}></MyBarGraph>\r\n      </div>\r\n    ),\r\n  },\r\n]);\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Demo></Demo>\r\n      <RouterProvider router={router} />\r\n      {/* <MyBarGraph data={data}></MyBarGraph> */}\r\n      {/* <TimeGraph data={data}></TimeGraph> */}\r\n      {/* <GraphContainer data={data}></GraphContainer> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"react-tooltip/dist/react-tooltip.css\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n/**\r\n * \r\n--openssl-legacy-provider\r\n--openssl-legacy-provider\r\n */\r\n"],"sourceRoot":""}